PROCEDURE dot_product(v1, v2 : ARRAY_OF INTEGER[3], ps: INTEGER)
VAR
    i: INTEGER
BEGIN
    // Calcule le produit scalaire de v1 et v2
    ps := 0
    FOR i FROM 1 TO v1.lenght DO
        ps := ps + v1[i] * v2[i]
    END FOR
END

ALGORITHM verifier_orthogonalite_pour_n_couples
VAR
  n, k, i: INTEGER;
  vecteur_liste: ARRAY_OF INTEGER[40][40];
  v1, v2: ARRAY_OF INTEGER[3];
  ps: INTEGER;
BEGIN
    // Vérifie l'orthogonalité pour n couples de vecteurs


    FOR k FROM 1 TO n DO
        v1 := vecteur_liste[k][1];
        v2 := vecteur_liste[k][2];

        // Appelle la procédure dot_product pour calculer le produit scalaire
        dot_product(v1, v2, ps);

        // Affiche le résultat
        Write("Produit scalaire des vecteurs ", v1, " et ", v2, " : ", ps);

        // Vérifie si les vecteurs sont orthogonaux
        IF ps = 0 THEN
            Write("Les vecteurs ", v1, " et ", v2, " sont orthogonaux.")
        ELSE
            Write("Les vecteurs ", v1, " et ", v2, " ne sont pas orthogonaux.")
        END IF;
    END_FOR
END
