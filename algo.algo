PROCEDURE dot_product(v1, v2 : ARRAY_OF INTEGER[3], ps: INTEGER)
VAR
    i: INTEGER
BEGIN
    // Calcule le produit scalaire de v1 et v2
    ps := 0
    FOR i FROM 1 TO v1.lenght DO
        ps := ps + v1[i] * v2[i]
    END FOR
END

ALGORITHM verifier_orthogonalite_pour_n_couples
VAR
  n, k, i: INTEGER;
  vecteur_liste: ARRAY_OF INTEGER[40][40];
  v1, v2: ARRAY_OF INTEGER[3];
  ps: INTEGER;
BEGIN
    // Vérifie l'orthogonalité pour n couples de vecteurs


    FOR k FROM 1 TO n DO
        v1 := vecteur_liste[k][1];
        v2 := vecteur_liste[k][2];

        // Appelle la procédure dot_product pour calculer le produit scalaire
        dot_product(v1, v2, ps);

        // Affiche le résultat
        Write("Produit scalaire des vecteurs ", v1, " et ", v2, " : ", ps);

        // Vérifie si les vecteurs sont orthogonaux
        IF ps = 0 THEN
            Write("Les vecteurs ", v1, " et ", v2, " sont orthogonaux.")
        ELSE
            Write("Les vecteurs ", v1, " et ", v2, " ne sont pas orthogonaux.")
        END IF;
    END_FOR
END



ALGORITHM sum_of_distinct_elements
VAR
  set1, set2: ARRAY_OF INTEGER[50];
  n1, n2, i, j, sum: INTEGER;

BEGIN
  // Lire la taille du premier ensemble
  Write("Entre la taille du premier ensemble");
  Read(n1);

  // Lire les éléments du premier ensemble
  FOR i FROM 1 TO n1 DO
    Read(set1[i]);
  END FOR

  // Lire la taille du deuxième ensemble
  Write("Entre la taille du deuxième ensemble");
  Read(n2);

  // Lire les éléments du deuxième ensemble
  FOR i FROM 1 TO n2 DO
    Read(set2[i]);
  END FOR

  // Initialiser la somme à 0
  sum := 0;

  FOR i FROM 1 TO n1 DO
    // Ajouter les éléments distincts à la somme
    VAR isDistinct: BOOLEAN := TRUE;
    FOR j FROM 1 TO n2 DO
      IF set1[i] = set2[j] THEN
        isDistinct := FALSE;
        EXIT; // Sortir de la boucle si l'élément est trouvé dans set2
      END IF;
    END FOR

    IF isDistinct THEN
      sum := sum + set1[i];
    END IF;
  END FOR


  // Parcourir le deuxième ensemble
  FOR j FROM 1 TO n2 DO
    // Ajouter les éléments distincts à la somme
    VAR isDistinct: BOOLEAN := TRUE;
    FOR i FROM 1 TO n1 DO
      IF set2[j] = set1[i] THEN
        isDistinct := FALSE;
        EXIT; // Sortir de la boucle si l'élément est trouvé dans set1
      END IF;
    END FOR

    IF isDistinct THEN
      sum := sum + set2[j];
    END IF;
  END FOR


  // Afficher la somme des éléments distincts
  Write("Somme des éléments distincts : ", sum);
END
